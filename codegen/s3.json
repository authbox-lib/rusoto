{
  "version":"2.0",
  "metadata":{
    "apiVersion":"2006-03-01",
    "checksumFormat":"md5",
    "endpointPrefix":"s3",
    "globalEndpoint":"s3.amazonaws.com",
    "serviceAbbreviation":"Amazon S3",
    "serviceFullName":"Amazon Simple Storage Service",
    "signatureVersion":"s3",
    "timestampFormat":"rfc822",
    "protocol":"rest-xml"
  },
  "operations":{
    "CopyObject":{
      "name":"CopyObject",
      "http":{
        "method":"PUT",
        "requestUri":"/{Bucket}/{Key+}"
      },
      "input":{"shape":"CopyObjectRequest"},
      "output":{"shape":"CopyObjectOutput"},
      "errors":[
        {
          "shape":"ObjectNotInActiveTierError",
          "exception":true,
          "documentation":"The source object of the COPY operation is not in the active tier and is only stored in Amazon Glacier."
        }
      ],
      "documentation":"Creates a copy of an object that is already stored in Amazon S3.",
      "documentationUrl":"http://docs.amazonwebservices.com/AmazonS3/latest/API/RESTObjectCOPY.html",
      "alias":"PutObjectCopy"
    }
  },
  "shapes":{
    "AcceptRanges":{"type":"string"},
    "AccessControlPolicy":{
      "type":"structure",
      "members":{
        "Grants":{
          "shape":"Grants",
          "documentation":"A list of grants.",
          "locationName":"AccessControlList"
        },
        "Owner":{"shape":"Owner"}
      }
    },
    "AllowedHeader":{"type":"string"},
    "AllowedHeaders":{
      "type":"list",
      "member":{"shape":"AllowedHeader"},
      "flattened":true
    },
    "AllowedMethod":{"type":"string"},
    "AllowedMethods":{
      "type":"list",
      "member":{"shape":"AllowedMethod"},
      "flattened":true
    },
    "AllowedOrigin":{"type":"string"},
    "AllowedOrigins":{
      "type":"list",
      "member":{"shape":"AllowedOrigin"},
      "flattened":true
    },
    "Body":{"type":"blob"},
    "Bucket":{
      "type":"structure",
      "members":{
        "Name":{
          "shape":"BucketName",
          "documentation":"The name of the bucket."
        },
        "CreationDate":{
          "shape":"CreationDate",
          "documentation":"Date the bucket was created."
        }
      }
    },
    "BucketLocationConstraint":{
      "type":"string",
      "enum":[
        "EU",
        "eu-west-1",
        "us-west-1",
        "us-west-2",
        "ap-southeast-1",
        "ap-southeast-2",
        "ap-northeast-1",
        "sa-east-1",
        "cn-north-1",
        "eu-central-1"
      ]
    },
    "BucketName":{"type":"string"},
    "BucketVersioningStatus":{
      "type":"string",
      "enum":[
        "Enabled",
        "Suspended"
      ]
    },
    "Buckets":{
      "type":"list",
      "member":{
        "shape":"Bucket",
        "locationName":"Bucket"
      }
    },
    "CORSConfiguration":{
      "type":"structure",
      "members":{
        "CORSRules":{
          "shape":"CORSRules",
          "locationName":"CORSRule"
        }
      }
    },
    "CORSRule":{
      "type":"structure",
      "members":{
        "AllowedHeaders":{
          "shape":"AllowedHeaders",
          "documentation":"Specifies which headers are allowed in a pre-flight OPTIONS request.",
          "locationName":"AllowedHeader"
        },
        "AllowedMethods":{
          "shape":"AllowedMethods",
          "documentation":"Identifies HTTP methods that the domain/origin specified in the rule is allowed to execute.",
          "locationName":"AllowedMethod"
        },
        "AllowedOrigins":{
          "shape":"AllowedOrigins",
          "documentation":"One or more origins you want customers to be able to access the bucket from.",
          "locationName":"AllowedOrigin"
        },
        "ExposeHeaders":{
          "shape":"ExposeHeaders",
          "documentation":"One or more headers in the response that you want customers to be able to access from their applications (for example, from a JavaScript XMLHttpRequest object).",
          "locationName":"ExposeHeader"
        },
        "MaxAgeSeconds":{
          "shape":"MaxAgeSeconds",
          "documentation":"The time in seconds that your browser is to cache the preflight response for the specified resource."
        }
      }
    },
    "CORSRules":{
      "type":"list",
      "member":{"shape":"CORSRule"},
      "flattened":true
    },
    "CacheControl":{"type":"string"},
    "CloudFunction":{"type":"string"},
    "CloudFunctionConfiguration":{
      "type":"structure",
      "members":{
        "Id":{"shape":"NotificationId"},
        "Event":{
          "shape":"Event",
          "deprecated":true
        },
        "Events":{
          "shape":"EventList",
          "locationName":"Event"
        },
        "CloudFunction":{"shape":"CloudFunction"},
        "InvocationRole":{"shape":"CloudFunctionInvocationRole"}
      }
    },
    "CloudFunctionInvocationRole":{"type":"string"},
    "Code":{"type":"string"},
    "CommonPrefix":{
      "type":"structure",
      "members":{
        "Prefix":{"shape":"Prefix"}
      }
    },
    "CommonPrefixList":{
      "type":"list",
      "member":{"shape":"CommonPrefix"},
      "flattened":true
    },

    "Condition":{
      "type":"structure",
      "members":{
        "HttpErrorCodeReturnedEquals":{
          "shape":"HttpErrorCodeReturnedEquals",
          "documentation":"The HTTP error code when the redirect is applied. In the event of an error, if the error code equals this value, then the specified redirect is applied. Required when parent element Condition is specified and sibling KeyPrefixEquals is not specified. If both are specified, then both must be true for the redirect to be applied."
        },
        "KeyPrefixEquals":{
          "shape":"KeyPrefixEquals",
          "documentation":"The object key name prefix when the redirect is applied. For example, to redirect requests for ExamplePage.html, the key prefix will be ExamplePage.html. To redirect request for all pages with the prefix docs/, the key prefix will be /docs, which identifies all objects in the docs/ folder. Required when the parent element Condition is specified and sibling HttpErrorCodeReturnedEquals is not specified. If both conditions are specified, both must be true for the redirect to be applied."
        }
      }
    },
    "ContentDisposition":{"type":"string"},
    "ContentEncoding":{"type":"string"},
    "ContentLanguage":{"type":"string"},
    "ContentLength":{"type":"integer"},
    "ContentMD5":{"type":"string"},
    "ContentRange":{"type":"string"},
    "ContentType":{"type":"string"},
    "CopyObjectOutput":{
      "type":"structure",
      "members":{
        "CopyObjectResult":{"shape":"CopyObjectResult"},
        "Expiration":{
          "shape":"Expiration",
          "location":"header",
          "locationName":"x-amz-expiration",
          "documentation":"If the object expiration is configured, the response includes this header."
        },
        "CopySourceVersionId":{
          "shape":"CopySourceVersionId",
          "location":"header",
          "locationName":"x-amz-copy-source-version-id"
        },
        "ServerSideEncryption":{
          "shape":"ServerSideEncryption",
          "location":"header",
          "locationName":"x-amz-server-side-encryption",
          "documentation":"The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms)."
        },
        "SSECustomerAlgorithm":{
          "shape":"SSECustomerAlgorithm",
          "location":"header",
          "locationName":"x-amz-server-side-encryption-customer-algorithm",
          "documentation":"If server-side encryption with a customer-provided encryption key was requested, the response will include this header confirming the encryption algorithm used."
        },
        "SSECustomerKeyMD5":{
          "shape":"SSECustomerKeyMD5",
          "location":"header",
          "locationName":"x-amz-server-side-encryption-customer-key-MD5",
          "documentation":"If server-side encryption with a customer-provided encryption key was requested, the response will include this header to provide round trip message integrity verification of the customer-provided encryption key."
        },
        "SSEKMSKeyId":{
          "shape":"SSEKMSKeyId",
          "location":"header",
          "locationName":"x-amz-server-side-encryption-aws-kms-key-id",
          "documentation":"If present, specifies the ID of the AWS Key Management Service (KMS) master encryption key that was used for the object."
        },
        "RequestCharged":{
          "shape":"RequestCharged",
          "location":"header",
          "locationName":"x-amz-request-charged"
        }
      },
      "payload":"CopyObjectResult"
    },
    "CopyObjectRequest":{
      "type":"structure",
      "required":[
        "Bucket",
        "CopySource",
        "Key"
      ],
      "members":{
        "ACL":{
          "shape":"ObjectCannedACL",
          "location":"header",
          "locationName":"x-amz-acl",
          "documentation":"The canned ACL to apply to the object."
        },
        "Bucket":{
          "shape":"BucketName",
          "location":"uri",
          "locationName":"Bucket"
        },
        "CacheControl":{
          "shape":"CacheControl",
          "location":"header",
          "locationName":"Cache-Control",
          "documentation":"Specifies caching behavior along the request/reply chain."
        },
        "ContentDisposition":{
          "shape":"ContentDisposition",
          "location":"header",
          "locationName":"Content-Disposition",
          "documentation":"Specifies presentational information for the object."
        },
        "ContentEncoding":{
          "shape":"ContentEncoding",
          "location":"header",
          "locationName":"Content-Encoding",
          "documentation":"Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field."
        },
        "ContentLanguage":{
          "shape":"ContentLanguage",
          "location":"header",
          "locationName":"Content-Language",
          "documentation":"The language the content is in."
        },
        "ContentType":{
          "shape":"ContentType",
          "location":"header",
          "locationName":"Content-Type",
          "documentation":"A standard MIME type describing the format of the object data."
        },
        "CopySource":{
          "shape":"CopySource",
          "location":"header",
          "locationName":"x-amz-copy-source",
          "documentation":"The name of the source bucket and key name of the source object, separated by a slash (/). Must be URL-encoded."
        },
        "CopySourceIfMatch":{
          "shape":"CopySourceIfMatch",
          "location":"header",
          "locationName":"x-amz-copy-source-if-match",
          "documentation":"Copies the object if its entity tag (ETag) matches the specified tag."
        },
        "CopySourceIfModifiedSince":{
          "shape":"CopySourceIfModifiedSince",
          "location":"header",
          "locationName":"x-amz-copy-source-if-modified-since",
          "documentation":"Copies the object if it has been modified since the specified time."
        },
        "CopySourceIfNoneMatch":{
          "shape":"CopySourceIfNoneMatch",
          "location":"header",
          "locationName":"x-amz-copy-source-if-none-match",
          "documentation":"Copies the object if its entity tag (ETag) is different than the specified ETag."
        },
        "CopySourceIfUnmodifiedSince":{
          "shape":"CopySourceIfUnmodifiedSince",
          "location":"header",
          "locationName":"x-amz-copy-source-if-unmodified-since",
          "documentation":"Copies the object if it hasn't been modified since the specified time."
        },
        "Expires":{
          "shape":"Expires",
          "location":"header",
          "locationName":"Expires",
          "documentation":"The date and time at which the object is no longer cacheable."
        },
        "GrantFullControl":{
          "shape":"GrantFullControl",
          "location":"header",
          "locationName":"x-amz-grant-full-control",
          "documentation":"Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the object."
        },
        "GrantRead":{
          "shape":"GrantRead",
          "location":"header",
          "locationName":"x-amz-grant-read",
          "documentation":"Allows grantee to read the object data and its metadata."
        },
        "GrantReadACP":{
          "shape":"GrantReadACP",
          "location":"header",
          "locationName":"x-amz-grant-read-acp",
          "documentation":"Allows grantee to read the object ACL."
        },
        "GrantWriteACP":{
          "shape":"GrantWriteACP",
          "location":"header",
          "locationName":"x-amz-grant-write-acp",
          "documentation":"Allows grantee to write the ACL for the applicable object."
        },
        "Key":{
          "shape":"ObjectKey",
          "location":"uri",
          "locationName":"Key"
        },
        "Metadata":{
          "shape":"Metadata",
          "location":"headers",
          "documentation":"A map of metadata to store with the object in S3.",
          "locationName":"x-amz-meta-"
        },
        "MetadataDirective":{
          "shape":"MetadataDirective",
          "location":"header",
          "locationName":"x-amz-metadata-directive",
          "documentation":"Specifies whether the metadata is copied from the source object or replaced with metadata provided in the request."
        },
        "ServerSideEncryption":{
          "shape":"ServerSideEncryption",
          "location":"header",
          "locationName":"x-amz-server-side-encryption",
          "documentation":"The Server-side encryption algorithm used when storing this object in S3 (e.g., AES256, aws:kms)."
        },
        "StorageClass":{
          "shape":"StorageClass",
          "location":"header",
          "locationName":"x-amz-storage-class",
          "documentation":"The type of storage to use for the object. Defaults to 'STANDARD'."
        },
        "WebsiteRedirectLocation":{
          "shape":"WebsiteRedirectLocation",
          "location":"header",
          "locationName":"x-amz-website-redirect-location",
          "documentation":"If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata."
        },
        "SSECustomerAlgorithm":{
          "shape":"SSECustomerAlgorithm",
          "location":"header",
          "locationName":"x-amz-server-side-encryption-customer-algorithm",
          "documentation":"Specifies the algorithm to use to when encrypting the object (e.g., AES256)."
        },
        "SSECustomerKey":{
          "shape":"SSECustomerKey",
          "location":"header",
          "locationName":"x-amz-server-side-encryption-customer-key",
          "documentation":"Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This value is used to store the object and then it is discarded; Amazon does not store the encryption key. The key must be appropriate for use with the algorithm specified in the x-amz-server-side-encryption-customer-algorithm header."
        },
        "SSECustomerKeyMD5":{
          "shape":"SSECustomerKeyMD5",
          "location":"header",
          "locationName":"x-amz-server-side-encryption-customer-key-MD5",
          "documentation":"Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error."
        },
        "SSEKMSKeyId":{
          "shape":"SSEKMSKeyId",
          "location":"header",
          "locationName":"x-amz-server-side-encryption-aws-kms-key-id",
          "documentation":"Specifies the AWS KMS key ID to use for object encryption. All GET and PUT requests for an object protected by AWS KMS will fail if not made via SSL or using SigV4. Documentation on configuring any of the officially supported AWS SDKs and CLI can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version"
        },
        "CopySourceSSECustomerAlgorithm":{
          "shape":"CopySourceSSECustomerAlgorithm",
          "location":"header",
          "locationName":"x-amz-copy-source-server-side-encryption-customer-algorithm",
          "documentation":"Specifies the algorithm to use when decrypting the source object (e.g., AES256)."
        },
        "CopySourceSSECustomerKey":{
          "shape":"CopySourceSSECustomerKey",
          "location":"header",
          "locationName":"x-amz-copy-source-server-side-encryption-customer-key",
          "documentation":"Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source object. The encryption key provided in this header must be one that was used when the source object was created."
        },
        "CopySourceSSECustomerKeyMD5":{
          "shape":"CopySourceSSECustomerKeyMD5",
          "location":"header",
          "locationName":"x-amz-copy-source-server-side-encryption-customer-key-MD5",
          "documentation":"Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure the encryption key was transmitted without error."
        },
        "RequestPayer":{
          "shape":"RequestPayer",
          "location":"header",
          "locationName":"x-amz-request-payer"
        }
      }
    },
    "CopyObjectResult":{
      "type":"structure",
      "members":{
        "ETag":{"shape":"ETag"},
        "LastModified":{"shape":"LastModified"}
      }
    },
    "CopyPartResult":{
      "type":"structure",
      "members":{
        "ETag":{
          "shape":"ETag",
          "documentation":"Entity tag of the object."
        },
        "LastModified":{
          "shape":"LastModified",
          "documentation":"Date and time at which the object was uploaded."
        }
      }
    },
    "CopySource":{
      "type":"string",
      "pattern":"\\/.+\\/.+"
    },
    "CopySourceIfMatch":{"type":"string"},
    "CopySourceIfModifiedSince":{"type":"timestamp"},
    "CopySourceIfNoneMatch":{"type":"string"},
    "CopySourceIfUnmodifiedSince":{"type":"timestamp"},
    "CopySourceRange":{"type":"string"},
    "CopySourceSSECustomerAlgorithm":{"type":"string"},
    "CopySourceSSECustomerKey":{
      "type":"string",
      "sensitive":true
    },
    "CopySourceSSECustomerKeyMD5":{"type":"string"},
    "CopySourceVersionId":{"type":"string"},
    "CreateBucketConfiguration":{
      "type":"structure",
      "members":{
        "LocationConstraint":{
          "shape":"BucketLocationConstraint",
          "documentation":"Specifies the region where the bucket will be created. If you don't specify a region, the bucket will be created in US Standard."
        }
      }
    },
    "CreationDate":{"type":"timestamp"},
    "Date":{
      "type":"timestamp",
      "timestampFormat":"iso8601"
    },
    "Days":{"type":"integer"},
    "Delete":{
      "type":"structure",
      "required":["Objects"],
      "members":{
        "Objects":{
          "shape":"ObjectIdentifierList",
          "locationName":"Object"
        },
        "Quiet":{
          "shape":"Quiet",
          "documentation":"Element to enable quiet mode for the request. When you add this element, you must set its value to true."
        }
      }
    },
    "DeleteMarker":{"type":"boolean"},
    "DeleteMarkerEntry":{
      "type":"structure",
      "members":{
        "Owner":{"shape":"Owner"},
        "Key":{
          "shape":"ObjectKey",
          "documentation":"The object key."
        },
        "VersionId":{
          "shape":"ObjectVersionId",
          "documentation":"Version ID of an object."
        },
        "IsLatest":{
          "shape":"IsLatest",
          "documentation":"Specifies whether the object is (true) or is not (false) the latest version of an object."
        },
        "LastModified":{
          "shape":"LastModified",
          "documentation":"Date and time the object was last modified."
        }
      }
    },
    "DeleteMarkerVersionId":{"type":"string"},
    "DeleteMarkers":{
      "type":"list",
      "member":{"shape":"DeleteMarkerEntry"},
      "flattened":true
    },
    "Delimiter":{"type":"string"},
    "Destination":{
      "type":"structure",
      "required":["Bucket"],
      "members":{
        "Bucket":{
          "shape":"BucketName",
          "documentation":"Amazon resource name (ARN) of the bucket where you want Amazon S3 to store replicas of the object identified by the rule."
        }
      }
    },
    "DisplayName":{"type":"string"},
    "ETag":{"type":"string"},
    "EmailAddress":{"type":"string"},
    "EncodingType":{
      "type":"string",
      "enum":["url"],
      "documentation":"Requests Amazon S3 to encode the object keys in the response and specifies the encoding method to use. An object key may contain any Unicode character; however, XML 1.0 parser cannot parse some characters, such as characters with an ASCII value from 0 to 10. For characters that are not supported in XML 1.0, you can add this parameter to request that Amazon S3 encode the keys in the response."
    },
    "Error":{
      "type":"structure",
      "members":{
        "Key":{"shape":"ObjectKey"},
        "VersionId":{"shape":"ObjectVersionId"},
        "Code":{"shape":"Code"},
        "Message":{"shape":"Message"}
      }
    },
    "ErrorDocument":{
      "type":"structure",
      "required":["Key"],
      "members":{
        "Key":{
          "shape":"ObjectKey",
          "documentation":"The object key name to use when a 4XX class error occurs."
        }
      }
    },
    "Errors":{
      "type":"list",
      "member":{"shape":"Error"},
      "flattened":true
    },
    "Event":{
      "type":"string",
      "enum":[
        "s3:ReducedRedundancyLostObject",
        "s3:ObjectCreated:*",
        "s3:ObjectCreated:Put",
        "s3:ObjectCreated:Post",
        "s3:ObjectCreated:Copy",
        "s3:ObjectCreated:CompleteMultipartUpload",
        "s3:ObjectRemoved:*",
        "s3:ObjectRemoved:Delete",
        "s3:ObjectRemoved:DeleteMarkerCreated"
      ],
      "documentation":"Bucket event for which to send notifications."
    },
    "EventList":{
      "type":"list",
      "member":{"shape":"Event"},
      "flattened":true
    },
    "Expiration":{"type":"string"},
    "ExpirationStatus":{
      "type":"string",
      "enum":[
        "Enabled",
        "Disabled"
      ]
    },
    "Expires":{"type":"timestamp"},
    "ExposeHeader":{"type":"string"},
    "ExposeHeaders":{
      "type":"list",
      "member":{"shape":"ExposeHeader"},
      "flattened":true
    },
    "GetBucketNotificationConfigurationRequest":{
      "type":"structure",
      "required":["Bucket"],
      "members":{
        "Bucket":{
          "shape":"BucketName",
          "location":"uri",
          "locationName":"Bucket",
          "documentation":"Name of the buket to get the notification configuration for."
        }
      }
    },
    "GetBucketPolicyOutput":{
      "type":"structure",
      "members":{
        "Policy":{
          "shape":"Policy",
          "documentation":"The bucket policy as a JSON document."
        }
      },
      "payload":"Policy"
    },
    "GetBucketPolicyRequest":{
      "type":"structure",
      "required":["Bucket"],
      "members":{
        "Bucket":{
          "shape":"BucketName",
          "location":"uri",
          "locationName":"Bucket"
        }
      }
    },
    "Grant":{
      "type":"structure",
      "members":{
        "Grantee":{"shape":"Grantee"},
        "Permission":{
          "shape":"Permission",
          "documentation":"Specifies the permission given to the grantee."
        }
      }
    },
    "GrantFullControl":{"type":"string"},
    "GrantRead":{"type":"string"},
    "GrantReadACP":{"type":"string"},
    "GrantWrite":{"type":"string"},
    "GrantWriteACP":{"type":"string"},
    "Grantee":{
      "type":"structure",
      "required":["Type"],
      "members":{
        "DisplayName":{
          "shape":"DisplayName",
          "documentation":"Screen name of the grantee."
        },
        "EmailAddress":{
          "shape":"EmailAddress",
          "documentation":"Email address of the grantee."
        },
        "ID":{
          "shape":"ID",
          "documentation":"The canonical user ID of the grantee."
        },
        "Type":{
          "shape":"Type",
          "documentation":"Type of grantee",
          "xmlAttribute":true,
          "locationName":"xsi:type"
        },
        "URI":{
          "shape":"URI",
          "documentation":"URI of the grantee group."
        }
      },
      "xmlNamespace":{
        "prefix":"xsi",
        "uri":"http://www.w3.org/2001/XMLSchema-instance"
      }
    },
    "Grants":{
      "type":"list",
      "member":{
        "shape":"Grant",
        "locationName":"Grant"
      }
    },
    "HostName":{"type":"string"},
    "HttpErrorCodeReturnedEquals":{"type":"string"},
    "HttpRedirectCode":{"type":"string"},
    "ID":{"type":"string"},
    "IfMatch":{"type":"string"},
    "IfModifiedSince":{"type":"timestamp"},
    "IfNoneMatch":{"type":"string"},
    "IfUnmodifiedSince":{"type":"timestamp"},
    "IndexDocument":{
      "type":"structure",
      "required":["Suffix"],
      "members":{
        "Suffix":{
          "shape":"Suffix",
          "documentation":"A suffix that is appended to a request that is for a directory on the website endpoint (e.g. if the suffix is index.html and you make a request to samplebucket/images/ the data that is returned will be for the object with the key name images/index.html) The suffix must not be empty and must not include a slash character."
        }
      }
    },
    "Initiated":{"type":"timestamp"},
    "Initiator":{
      "type":"structure",
      "members":{
        "ID":{
          "shape":"ID",
          "documentation":"If the principal is an AWS account, it provides the Canonical User ID. If the principal is an IAM User, it provides a user ARN value."
        },
        "DisplayName":{
          "shape":"DisplayName",
          "documentation":"Name of the Principal."
        }
      }
    },
    "IsLatest":{"type":"boolean"},
    "IsTruncated":{"type":"boolean"},
    "KeyMarker":{"type":"string"},
    "KeyPrefixEquals":{"type":"string"},
    "LambdaFunctionArn":{"type":"string"},
    "LambdaFunctionConfiguration":{
      "type":"structure",
      "required":[
        "LambdaFunctionArn",
        "Events"
      ],
      "members":{
        "Id":{"shape":"NotificationId"},
        "LambdaFunctionArn":{
          "shape":"LambdaFunctionArn",
          "documentation":"Lambda cloud function ARN that Amazon S3 can invoke when it detects events of the specified type.",
          "locationName":"CloudFunction"
        },
        "Events":{
          "shape":"EventList",
          "locationName":"Event"
        }
      },
      "documentation":"Container for specifying the AWS Lambda notification configuration."
    },
    "LambdaFunctionConfigurationList":{
      "type":"list",
      "member":{"shape":"LambdaFunctionConfiguration"},
      "flattened":true
    },
    "LastModified":{"type":"timestamp"},
    "LifecycleConfiguration":{
      "type":"structure",
      "required":["Rules"],
      "members":{
        "Rules":{
          "shape":"Rules",
          "locationName":"Rule"
        }
      }
    },
    "LifecycleExpiration":{
      "type":"structure",
      "members":{
        "Date":{
          "shape":"Date",
          "documentation":"Indicates at what date the object is to be moved or deleted. Should be in GMT ISO 8601 Format."
        },
        "Days":{
          "shape":"Days",
          "documentation":"Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer."
        }
      }
    },
    "Location":{"type":"string"},
    "MFA":{"type":"string"},
    "MFADelete":{
      "type":"string",
      "enum":[
        "Enabled",
        "Disabled"
      ]
    },
    "MFADeleteStatus":{
      "type":"string",
      "enum":[
        "Enabled",
        "Disabled"
      ]
    },
    "Marker":{"type":"string"},
    "MaxAgeSeconds":{"type":"integer"},
    "MaxKeys":{"type":"integer"},
    "MaxParts":{"type":"integer"},
    "MaxUploads":{"type":"integer"},
    "Message":{"type":"string"},
    "Metadata":{
      "type":"map",
      "key":{"shape":"MetadataKey"},
      "value":{"shape":"MetadataValue"}
    },
    "MetadataDirective":{
      "type":"string",
      "enum":[
        "COPY",
        "REPLACE"
      ]
    },
    "MetadataKey":{"type":"string"},
    "MetadataValue":{"type":"string"},
    "MissingMeta":{"type":"integer"},
    "MultipartUpload":{
      "type":"structure",
      "members":{
        "UploadId":{
          "shape":"MultipartUploadId",
          "documentation":"Upload ID that identifies the multipart upload."
        },
        "Key":{
          "shape":"ObjectKey",
          "documentation":"Key of the object for which the multipart upload was initiated."
        },
        "Initiated":{
          "shape":"Initiated",
          "documentation":"Date and time at which the multipart upload was initiated."
        },
        "StorageClass":{
          "shape":"StorageClass",
          "documentation":"The class of storage used to store the object."
        },
        "Owner":{"shape":"Owner"},
        "Initiator":{
          "shape":"Initiator",
          "documentation":"Identifies who initiated the multipart upload."
        }
      }
    },
    "MultipartUploadId":{"type":"string"},
    "MultipartUploadList":{
      "type":"list",
      "member":{"shape":"MultipartUpload"},
      "flattened":true
    },
    "NextKeyMarker":{"type":"string"},
    "NextMarker":{"type":"string"},
    "NextPartNumberMarker":{"type":"integer"},
    "NextUploadIdMarker":{"type":"string"},
    "NextVersionIdMarker":{"type":"string"},
    "NoSuchBucket":{
      "type":"structure",
      "members":{
      },
      "exception":true,
      "documentation":"The specified bucket does not exist."
    },
    "NoSuchKey":{
      "type":"structure",
      "members":{
      },
      "exception":true,
      "documentation":"The specified key does not exist."
    },
    "NoSuchUpload":{
      "type":"structure",
      "members":{
      },
      "exception":true,
      "documentation":"The specified multipart upload does not exist."
    },
    "NoncurrentVersionExpiration":{
      "type":"structure",
      "members":{
        "NoncurrentDays":{
          "shape":"Days",
          "documentation":"Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see <a href=\"/AmazonS3/latest/dev/s3-access-control.html\">How Amazon S3 Calculates When an Object Became Noncurrent</a> in the Amazon Simple Storage Service Developer Guide."
        }
      },
      "documentation":"Specifies when noncurrent object versions expire. Upon expiration, Amazon S3 permanently deletes the noncurrent object versions. You set this lifecycle configuration action on a bucket that has versioning enabled (or suspended) to request that Amazon S3 delete noncurrent object versions at a specific period in the object's lifetime."
    },
    "NoncurrentVersionTransition":{
      "type":"structure",
      "members":{
        "NoncurrentDays":{
          "shape":"Days",
          "documentation":"Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action. For information about the noncurrent days calculations, see <a href=\"/AmazonS3/latest/dev/s3-access-control.html\">How Amazon S3 Calculates When an Object Became Noncurrent</a> in the Amazon Simple Storage Service Developer Guide."
        },
        "StorageClass":{
          "shape":"TransitionStorageClass",
          "documentation":"The class of storage used to store the object."
        }
      },
      "documentation":"Container for the transition rule that describes when noncurrent objects transition to the GLACIER storage class. If your bucket is versioning-enabled (or versioning is suspended), you can set this action to request that Amazon S3 transition noncurrent object versions to the GLACIER storage class at a specific period in the object's lifetime."
    },
    "NotificationConfiguration":{
      "type":"structure",
      "members":{
        "TopicConfigurations":{
          "shape":"TopicConfigurationList",
          "locationName":"TopicConfiguration"
        },
        "QueueConfigurations":{
          "shape":"QueueConfigurationList",
          "locationName":"QueueConfiguration"
        },
        "LambdaFunctionConfigurations":{
          "shape":"LambdaFunctionConfigurationList",
          "locationName":"CloudFunctionConfiguration"
        }
      },
      "documentation":"Container for specifying the notification configuration of the bucket. If this element is empty, notifications are turned off on the bucket."
    },
    "NotificationConfigurationDeprecated":{
      "type":"structure",
      "members":{
        "TopicConfiguration":{"shape":"TopicConfigurationDeprecated"},
        "QueueConfiguration":{"shape":"QueueConfigurationDeprecated"},
        "CloudFunctionConfiguration":{"shape":"CloudFunctionConfiguration"}
      }
    },
    "NotificationId":{
      "type":"string",
      "documentation":"Optional unique identifier for configurations in a notification configuration. If you don't provide one, Amazon S3 will assign an ID."
    },
    "Object":{
      "type":"structure",
      "members":{
        "Key":{"shape":"ObjectKey"},
        "LastModified":{"shape":"LastModified"},
        "ETag":{"shape":"ETag"},
        "Size":{"shape":"Size"},
        "StorageClass":{
          "shape":"ObjectStorageClass",
          "documentation":"The class of storage used to store the object."
        },
        "Owner":{"shape":"Owner"}
      }
    },
    "ObjectAlreadyInActiveTierError":{
      "type":"structure",
      "members":{
      },
      "exception":true,
      "documentation":"This operation is not allowed against this storage tier"
    },
    "ObjectCannedACL":{
      "type":"string",
      "enum":[
        "private",
        "public-read",
        "public-read-write",
        "authenticated-read",
        "bucket-owner-read",
        "bucket-owner-full-control"
      ]
    },
    "ObjectIdentifier":{
      "type":"structure",
      "required":["Key"],
      "members":{
        "Key":{
          "shape":"ObjectKey",
          "documentation":"Key name of the object to delete."
        },
        "VersionId":{
          "shape":"ObjectVersionId",
          "documentation":"VersionId for the specific version of the object to delete."
        }
      }
    },
    "ObjectIdentifierList":{
      "type":"list",
      "member":{"shape":"ObjectIdentifier"},
      "flattened":true
    },
    "ObjectKey":{"type":"string"},
    "ObjectList":{
      "type":"list",
      "member":{"shape":"Object"},
      "flattened":true
    },
    "ObjectNotInActiveTierError":{
      "type":"structure",
      "members":{
      },
      "exception":true,
      "documentation":"The source object of the COPY operation is not in the active tier and is only stored in Amazon Glacier."
    },
    "ObjectStorageClass":{
      "type":"string",
      "enum":[
        "STANDARD",
        "REDUCED_REDUNDANCY",
        "GLACIER"
      ]
    },
    "ObjectVersion":{
      "type":"structure",
      "members":{
        "ETag":{"shape":"ETag"},
        "Size":{
          "shape":"Size",
          "documentation":"Size in bytes of the object."
        },
        "StorageClass":{
          "shape":"ObjectVersionStorageClass",
          "documentation":"The class of storage used to store the object."
        },
        "Key":{
          "shape":"ObjectKey",
          "documentation":"The object key."
        },
        "VersionId":{
          "shape":"ObjectVersionId",
          "documentation":"Version ID of an object."
        },
        "IsLatest":{
          "shape":"IsLatest",
          "documentation":"Specifies whether the object is (true) or is not (false) the latest version of an object."
        },
        "LastModified":{
          "shape":"LastModified",
          "documentation":"Date and time the object was last modified."
        },
        "Owner":{"shape":"Owner"}
      }
    },
    "ObjectVersionId":{"type":"string"},
    "ObjectVersionList":{
      "type":"list",
      "member":{"shape":"ObjectVersion"},
      "flattened":true
    },
    "ObjectVersionStorageClass":{
      "type":"string",
      "enum":["STANDARD"]
    },
    "Owner":{
      "type":"structure",
      "members":{
        "DisplayName":{"shape":"DisplayName"},
        "ID":{"shape":"ID"}
      }
    },
    "Part":{
      "type":"structure",
      "members":{
        "PartNumber":{
          "shape":"PartNumber",
          "documentation":"Part number identifying the part. This is a positive integer between 1 and 10,000."
        },
        "LastModified":{
          "shape":"LastModified",
          "documentation":"Date and time at which the part was uploaded."
        },
        "ETag":{
          "shape":"ETag",
          "documentation":"Entity tag returned when the part was uploaded."
        },
        "Size":{
          "shape":"Size",
          "documentation":"Size of the uploaded part data."
        }
      }
    },
    "PartNumber":{"type":"integer"},
    "PartNumberMarker":{"type":"integer"},
    "Parts":{
      "type":"list",
      "member":{"shape":"Part"},
      "flattened":true
    },
    "Payer":{
      "type":"string",
      "enum":[
        "Requester",
        "BucketOwner"
      ]
    },
    "Permission":{
      "type":"string",
      "enum":[
        "FULL_CONTROL",
        "WRITE",
        "WRITE_ACP",
        "READ",
        "READ_ACP"
      ]
    },
    "Policy":{"type":"string"},
    "Prefix":{"type":"string"},
    "Protocol":{
      "type":"string",
      "enum":[
        "http",
        "https"
      ]
    },
    "QueueArn":{"type":"string"},
    "QueueConfiguration":{
      "type":"structure",
      "required":[
        "QueueArn",
        "Events"
      ],
      "members":{
        "Id":{"shape":"NotificationId"},
        "QueueArn":{
          "shape":"QueueArn",
          "documentation":"Amazon SQS queue ARN to which Amazon S3 will publish a message when it detects events of specified type.",
          "locationName":"Queue"
        },
        "Events":{
          "shape":"EventList",
          "locationName":"Event"
        }
      },
      "documentation":"Container for specifying an configuration when you want Amazon S3 to publish events to an Amazon Simple Queue Service (Amazon SQS) queue."
    },
    "QueueConfigurationDeprecated":{
      "type":"structure",
      "members":{
        "Id":{"shape":"NotificationId"},
        "Event":{
          "shape":"Event",
          "deprecated":true
        },
        "Events":{
          "shape":"EventList",
          "locationName":"Event"
        },
        "Queue":{"shape":"QueueArn"}
      }
    },
    "QueueConfigurationList":{
      "type":"list",
      "member":{"shape":"QueueConfiguration"},
      "flattened":true
    },
    "Quiet":{"type":"boolean"},
    "Range":{"type":"string"},
    "Redirect":{
      "type":"structure",
      "members":{
        "HostName":{
          "shape":"HostName",
          "documentation":"The host name to use in the redirect request."
        },
        "HttpRedirectCode":{
          "shape":"HttpRedirectCode",
          "documentation":"The HTTP redirect code to use on the response. Not required if one of the siblings is present."
        },
        "Protocol":{
          "shape":"Protocol",
          "documentation":"Protocol to use (http, https) when redirecting requests. The default is the protocol that is used in the original request."
        },
        "ReplaceKeyPrefixWith":{
          "shape":"ReplaceKeyPrefixWith",
          "documentation":"The object key prefix to use in the redirect request. For example, to redirect requests for all pages with prefix docs/ (objects in the docs/ folder) to documents/, you can set a condition block with KeyPrefixEquals set to docs/ and in the Redirect set ReplaceKeyPrefixWith to /documents. Not required if one of the siblings is present. Can be present only if ReplaceKeyWith is not provided."
        },
        "ReplaceKeyWith":{
          "shape":"ReplaceKeyWith",
          "documentation":"The specific object key to use in the redirect request. For example, redirect request to error.html. Not required if one of the sibling is present. Can be present only if ReplaceKeyPrefixWith is not provided."
        }
      }
    },
    "RedirectAllRequestsTo":{
      "type":"structure",
      "required":["HostName"],
      "members":{
        "HostName":{
          "shape":"HostName",
          "documentation":"Name of the host where requests will be redirected."
        },
        "Protocol":{
          "shape":"Protocol",
          "documentation":"Protocol to use (http, https) when redirecting requests. The default is the protocol that is used in the original request."
        }
      }
    },
    "ReplaceKeyPrefixWith":{"type":"string"},
    "ReplaceKeyWith":{"type":"string"},
    "RequestCharged":{
      "type":"string",
      "enum":["requester"],
      "documentation":"If present, indicates that the requester was successfully charged for the request."
    },
    "RequestPayer":{
      "type":"string",
      "enum":["requester"],
      "documentation":"Confirms that the requester knows that she or he will be charged for the request. Bucket owners need not specify this parameter in their requests. Documentation on downloading objects from requester pays buckets can be found at http://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html"
    },
    "RequestPaymentConfiguration":{
      "type":"structure",
      "required":["Payer"],
      "members":{
        "Payer":{
          "shape":"Payer",
          "documentation":"Specifies who pays for the download and request fees."
        }
      }
    },
    "ResponseCacheControl":{"type":"string"},
    "ResponseContentDisposition":{"type":"string"},
    "ResponseContentEncoding":{"type":"string"},
    "ResponseContentLanguage":{"type":"string"},
    "ResponseContentType":{"type":"string"},
    "ResponseExpires":{"type":"timestamp"},
    "Restore":{"type":"string"},
    "RestoreObjectOutput":{
      "type":"structure",
      "members":{
        "RequestCharged":{
          "shape":"RequestCharged",
          "location":"header",
          "locationName":"x-amz-request-charged"
        }
      }
    },
    "Role":{"type":"string"},
    "RoutingRule":{
      "type":"structure",
      "required":["Redirect"],
      "members":{
        "Condition":{
          "shape":"Condition",
          "documentation":"A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the /docs folder, redirect to the /documents folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error."
        },
        "Redirect":{
          "shape":"Redirect",
          "documentation":"Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event of an error, you can can specify a different error code to return."
        }
      }
    },
    "RoutingRules":{
      "type":"list",
      "member":{
        "shape":"RoutingRule",
        "locationName":"RoutingRule"
      }
    },
    "Rule":{
      "type":"structure",
      "required":[
        "Prefix",
        "Status"
      ],
      "members":{
        "Expiration":{"shape":"LifecycleExpiration"},
        "ID":{
          "shape":"ID",
          "documentation":"Unique identifier for the rule. The value cannot be longer than 255 characters."
        },
        "Prefix":{
          "shape":"Prefix",
          "documentation":"Prefix identifying one or more objects to which the rule applies."
        },
        "Status":{
          "shape":"ExpirationStatus",
          "documentation":"If 'Enabled', the rule is currently being applied. If 'Disabled', the rule is not currently being applied."
        },
        "Transition":{"shape":"Transition"},
        "NoncurrentVersionTransition":{"shape":"NoncurrentVersionTransition"},
        "NoncurrentVersionExpiration":{"shape":"NoncurrentVersionExpiration"}
      }
    },
    "Rules":{
      "type":"list",
      "member":{"shape":"Rule"},
      "flattened":true
    },
    "SSECustomerAlgorithm":{"type":"string"},
    "SSECustomerKey":{
      "type":"string",
      "sensitive":true
    },
    "SSECustomerKeyMD5":{"type":"string"},
    "SSEKMSKeyId":{
      "type":"string",
      "sensitive":true
    },
    "ServerSideEncryption":{
      "type":"string",
      "enum":[
        "AES256",
        "aws:kms"
      ]
    },
    "Size":{"type":"integer"},
    "StorageClass":{
      "type":"string",
      "enum":[
        "STANDARD",
        "REDUCED_REDUNDANCY",
        "LT"
      ]
    },
    "Suffix":{"type":"string"},
    "Tag":{
      "type":"structure",
      "required":[
        "Key",
        "Value"
      ],
      "members":{
        "Key":{
          "shape":"ObjectKey",
          "documentation":"Name of the tag."
        },
        "Value":{
          "shape":"Value",
          "documentation":"Value of the tag."
        }
      }
    },
    "TagSet":{
      "type":"list",
      "member":{
        "shape":"Tag",
        "locationName":"Tag"
      }
    },
    "Tagging":{
      "type":"structure",
      "required":["TagSet"],
      "members":{
        "TagSet":{"shape":"TagSet"}
      }
    },
    "TargetBucket":{"type":"string"},
    "TargetPrefix":{"type":"string"},
    "TopicArn":{"type":"string"},
    "TopicConfiguration":{
      "type":"structure",
      "required":[
        "TopicArn",
        "Events"
      ],
      "members":{
        "Id":{"shape":"NotificationId"},
        "TopicArn":{
          "shape":"TopicArn",
          "documentation":"Amazon SNS topic ARN to which Amazon S3 will publish a message when it detects events of specified type.",
          "locationName":"Topic"
        },
        "Events":{
          "shape":"EventList",
          "locationName":"Event"
        }
      },
      "documentation":"Container for specifying the configuration when you want Amazon S3 to publish events to an Amazon Simple Notification Service (Amazon SNS) topic."
    },
    "TopicConfigurationDeprecated":{
      "type":"structure",
      "members":{
        "Id":{"shape":"NotificationId"},
        "Events":{
          "shape":"EventList",
          "locationName":"Event"
        },
        "Event":{
          "shape":"Event",
          "deprecated":true,
          "documentation":"Bucket event for which to send notifications."
        },
        "Topic":{
          "shape":"TopicArn",
          "documentation":"Amazon SNS topic to which Amazon S3 will publish a message to report the specified events for the bucket."
        }
      }
    },
    "TopicConfigurationList":{
      "type":"list",
      "member":{"shape":"TopicConfiguration"},
      "flattened":true
    },
    "Transition":{
      "type":"structure",
      "members":{
        "Date":{
          "shape":"Date",
          "documentation":"Indicates at what date the object is to be moved or deleted. Should be in GMT ISO 8601 Format."
        },
        "Days":{
          "shape":"Days",
          "documentation":"Indicates the lifetime, in days, of the objects that are subject to the rule. The value must be a non-zero positive integer."
        },
        "StorageClass":{
          "shape":"TransitionStorageClass",
          "documentation":"The class of storage used to store the object."
        }
      }
    },
    "TransitionStorageClass":{
      "type":"string",
      "enum":["GLACIER"]
    },
    "Type":{
      "type":"string",
      "enum":[
        "CanonicalUser",
        "AmazonCustomerByEmail",
        "Group"
      ]
    },
    "URI":{"type":"string"},
    "UploadIdMarker":{"type":"string"},
    "Value":{"type":"string"},
    "VersionIdMarker":{"type":"string"},
    "VersioningConfiguration":{
      "type":"structure",
      "members":{
        "MFADelete":{
          "shape":"MFADelete",
          "documentation":"Specifies whether MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned.",
          "locationName":"MfaDelete"
        },
        "Status":{
          "shape":"BucketVersioningStatus",
          "documentation":"The versioning state of the bucket."
        }
      }
    },
    "WebsiteConfiguration":{
      "type":"structure",
      "members":{
        "ErrorDocument":{"shape":"ErrorDocument"},
        "IndexDocument":{"shape":"IndexDocument"},
        "RedirectAllRequestsTo":{"shape":"RedirectAllRequestsTo"},
        "RoutingRules":{"shape":"RoutingRules"}
      }
    },
    "WebsiteRedirectLocation":{"type":"string"}
  },
  "examples":{
  }
}
